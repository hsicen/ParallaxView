package com.hsicen.parallaxviewimport android.content.Intentimport android.graphics.Colorimport android.os.Bundleimport android.view.ViewGroupimport android.widget.ImageViewimport androidx.activity.ComponentActivityimport androidx.activity.enableEdgeToEdgeimport androidx.activity.viewModelsimport androidx.appcompat.app.AppCompatActivityimport androidx.compose.ui.unit.dpimport com.bumptech.glide.Glideimport com.google.android.material.imageview.ShapeableImageViewimport com.google.android.material.shape.ShapeAppearanceModelclass SampleList2 : AppCompatActivity() {  companion object {    fun start(act: ComponentActivity) {      act.startActivity(Intent(act, SampleList2::class.java))    }  }  private val mViewModel by viewModels<SimpleViewModel>()  private val mParallaxView by lazy {    ParallaxView(this).apply {      setBackgroundColor(Color.GRAY)    }  }  private val mAdapter by lazy {    object : ParallaxViewAdapter {      override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ParallaxViewHolder {        return ParallaxViewHolder(          ShapeableImageView(parent.context).apply {            val w = 240.dp.value.toInt()            val h = 300.dp.value.toInt()            val radius = 15.dp.value            layoutParams = ViewGroup.MarginLayoutParams(w, h)            shapeAppearanceModel = ShapeAppearanceModel()              .withCornerSize(radius)            scaleType = ImageView.ScaleType.CENTER_CROP          })      }      override fun onBindViewHolder(holder: ParallaxViewHolder, position: Int, data: ParallaxData) {        Glide.with(holder.root)          .load(data.img)          .into(holder.root as ImageView)      }    }  }  override fun onCreate(savedInstanceState: Bundle?) {    super.onCreate(savedInstanceState)    enableEdgeToEdge()    setContentView(      mParallaxView, ViewGroup.MarginLayoutParams(        ViewGroup.LayoutParams.MATCH_PARENT,        ViewGroup.LayoutParams.WRAP_CONTENT      ).apply {        topMargin = 120.dp.value.toInt()      }    )    mParallaxView.addConfig(      ParallaxViewConfig(        autoStart = false,        reverse = true,        parallaxAdapter = mAdapter      )    ).updateData(mViewModel.provideData())  }}